/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.p2p.sharer.ui;

import java.util.logging.Level;

import com.p2p.core.PeerInfo;
import com.p2p.core.SimplePingStabilizer;
import com.p2p.core.util.LoggerUtil;
import com.p2p.sharer.SharerNode;
import com.p2p.sharer.handlers.Router;
import com.p2p.sharer.handlers.ui.listeners.AddFileListener;
import com.p2p.sharer.handlers.ui.listeners.FechListener;
import com.p2p.sharer.handlers.ui.listeners.RebuildPeerListener;
import com.p2p.sharer.handlers.ui.listeners.RefreshPeersListener;
import com.p2p.sharer.handlers.ui.listeners.RemovePeerListener;
import com.p2p.sharer.handlers.ui.listeners.SearchFileListener;
import java.io.File;
import java.net.InetAddress;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JTextField;

/**
 * @author jpizana
 * @author axvelazq
 * 
 */
public class BlueTorrent extends javax.swing.JFrame {
	public SharerNode peer;
        private DefaultListModel peerListModel = new DefaultListModel();
        private DefaultListModel filesModel = new DefaultListModel();
        private DefaultListModel downloadModel = new DefaultListModel();
    /**
     * Creates new form BlueTorrent
     */
    public BlueTorrent() {
        initComponents();
        registerListeners();
        LoggerUtil.setHandlerLevel(Level.FINE);
        this.initUI();
        this.fileList.setModel(this.filesModel);
        this.peerList.setModel(this.peerListModel);
        this.downloadList.setModel(this.downloadModel);
        initWorkingDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        peerList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechbtn = new javax.swing.JButton();
        RemoveBtn = new javax.swing.JButton();
        RefreshBtn = new javax.swing.JButton();
        addFileBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        seachBtn = new javax.swing.JButton();
        buildPeerTxt = new javax.swing.JTextField();
        buildBtn = new javax.swing.JButton();
        txtFileName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        downloadList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Axel Velazquez");

        jScrollPane1.setViewportView(peerList);

        jScrollPane2.setViewportView(fileList);

        jLabel1.setText("Available Files:");

        jLabel2.setText("Peer List:");

        fechbtn.setText("Fetch");

        RemoveBtn.setText("Remove");

        RefreshBtn.setText("Refresh");

        addFileBtn.setText("Register File");
        addFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileBtnActionPerformed(evt);
            }
        });

        searchTxt.setText("Search File");
        searchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTxtFocusGained(evt);
            }
        });

        seachBtn.setText("Search");

        buildBtn.setText("Rebuild");
        buildBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildBtnActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(downloadList);

        jLabel3.setText("Download files");

        jMenu1.setText("File");

        jMenuItem2.setText("Set port");
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFileName)))
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seachBtn)
                        .addGap(31, 31, 31)
                        .addComponent(buildPeerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buildBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addFileBtn)
                        .addGap(302, 302, 302)
                        .addComponent(RemoveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RefreshBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(fechbtn)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(6, 6, 6)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFileBtn)
                    .addComponent(RemoveBtn)
                    .addComponent(RefreshBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seachBtn)
                    .addComponent(buildPeerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buildBtn))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initUI(){
    	try{
            this.peerList.setModel(this.peerListModel);
            
    	System.out.println("File Sharer");
    	Scanner scanner = new Scanner(System.in);
        System.out.println("What's the default port:");
        int port = scanner.nextInt();
        System.out.println(InetAddress.getLocalHost().getHostName());
    	this.initPeerNode("localhost", port, 5, new PeerInfo(InetAddress.getLocalHost().getHostName(), port));
        
        
    	}catch(Exception ex){
    		System.out.println(ex.getMessage());
    		ex.printStackTrace();
    	}
    	
    }
    private void initWorkingDirectory(){
        try{
        File download = new File("download");
        File myfiles = new File("sharedFiles");
            if(!download.exists()){
                download.mkdir();
            }
            if(!myfiles.exists()){
                myfiles.mkdir();
            }
        }catch(Exception ex){
            LoggerUtil.getLogger().log(Level.SEVERE,ex.getMessage());
        }
    }
            
    private void registerListeners(){
        this.buildBtn.addActionListener(new RebuildPeerListener(this));
        this.addFileBtn.addActionListener(new AddFileListener(this));
        this.fechbtn.addActionListener(new FechListener(this));
        this.RefreshBtn.addActionListener(new RefreshPeersListener(this));
        this.RemoveBtn.addActionListener(new RemovePeerListener(this));
        this.seachBtn.addActionListener(new SearchFileListener(this));
    }
    private void initPeerNode(String initialHost, int initialPort,int maxPeers, PeerInfo myInfo){
    	this.peer = new SharerNode(maxPeers, myInfo);
             
        Thread t = null;
            t = new Thread(new Runnable() {
                
                @Override
                public void run() {
                    peer.mainLoop();
                }
            });
        t.start();
        
        	new javax.swing.Timer(5000, new RefreshPeersListener(this)).start();
		peer.startStabilizer(new SimplePingStabilizer(peer), 5000);
                
        this.setTitle(myInfo.toString());
        this.peer.buildPeers(initialHost, initialPort, 2);
        
    }
    private void initFiles(){

        File myfiles = new File("sharedFiles");
        if(myfiles.exists()){
           
            String files[] =myfiles.list();
            for(String file : files){
                if(!peer.getTableFiles().containsKey(file)){
                    peer.getTableFiles().put(file, peer.getId());
                }
            }
        }
        File download = new File("download");
        downloadModel.removeAllElements();
        if(download.exists()){
            String files [] = download.list();
            for(String f: files){
                downloadModel.addElement(f);
            }
        }
    }
    public void updateFileList(){
        initFiles();
        filesModel.removeAllElements();
		for (String filename : peer.getFileNames()) {
			String pid = peer.getFileOwner(filename);
			if (pid.equals(peer.getId()))
				filesModel.addElement(filename + ":(local)");
			else
				filesModel.addElement(filename + ":" + pid);
		}
    }
    public void updatePeerList(){
        this.peerListModel.removeAllElements();
        for(String peerId: this.peer.getPeerKeys()){
            this.peerListModel.addElement(peerId);
        }
    
    }
    public String getBuildPeer(){
           return this.buildPeerTxt.getText();
    }
    public String getAddFile(){
        return this.txtFileName.getText();
    }
    public String getSearchFileText(){
        return this.searchTxt.getText();
    }
    public JTextField getFileTextArea(){
        return this.txtFileName;
    }
    public JTextField getSearchTextArea(){
        return this.searchTxt;
    }
    private void addFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileBtnActionPerformed
        Router r = new Router(null);
        
    }//GEN-LAST:event_addFileBtnActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void buildBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildBtnActionPerformed
        // Build
        
    }//GEN-LAST:event_buildBtnActionPerformed

    private void searchTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTxtFocusGained
        // TODO add your handling code here:
        this.searchTxt.setText("");
    }//GEN-LAST:event_searchTxtFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlueTorrent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlueTorrent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlueTorrent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlueTorrent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlueTorrent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshBtn;
    private javax.swing.JButton RemoveBtn;
    private javax.swing.JButton addFileBtn;
    private javax.swing.JButton buildBtn;
    private javax.swing.JTextField buildPeerTxt;
    private javax.swing.JList downloadList;
    private javax.swing.JButton fechbtn;
    public javax.swing.JList fileList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JList peerList;
    private javax.swing.JButton seachBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField txtFileName;
    // End of variables declaration//GEN-END:variables
}
